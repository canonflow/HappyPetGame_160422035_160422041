<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="smoke.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODdhCgAeAHcAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJCgAAACwAAAAACgAeAIAAAADAy9wCEoSP
        qcvtD6OctNqLs86hrx5EBQAh+QQJCgAAACwCABcABwAHAIEAAAD////Ay9wAAAACDISPqRDdJpyAos5V
        AAAh+QQJCgAAACwCABAABwAOAIEAAAD////Ay9wAAAACE4SPqcutAQ+cQEwo8sy8V29wRgEAIfkECQoA
        AAAsAQALAAkAEQCBAAAA////wMvcAAAAAh2Ej6nLfQETnEdMCoS9RntbfYgWaFKUWILiOSxSAAAh+QQJ
        CgAAACwBAAoACQAQAIEAAAD////Ay9wAAAACIISPFpvrJ9wSQEQ5LQ6261B5liGOpJd0yYow6ZSqMVIA
        ACH5BAkKAAAALAIACQAHAA8AgQAAAP///8DL3AAAAAIYhH+hqSvdxIuySmCFyaeiDyJLF2jddR4FACH5
        BAkKAAAALAIACAAHAA4AgQAAAP///8DL3AAAAAIWhH+hqSuthGyyWmDFqaj7jyxh0ElGAQAh+QQJCgAA
        ACwCAAcABwAOAIEAAAD////Ay9wAAAACF4R/oakrrcSDcoaKJcinog8iAbggGlAAACH5BAkKAAAALAIA
        BQAHAA8AgQAAAP///8DL3AAAAAIXhI8JwcdvXhNCBoprxmAfroSJMFLjUQAAIfkECQoAAAAsAwAEAAUA
        DgCBAAAA////wMvcAAAAAhGEHwnJHSISnBSCebLe2RpfAAAh+QQJCgAAACwDAAMABQANAIEAAAD////A
        y9wAAAACEoQfYZnAKpIAokYbaT28+z4BBQAh+QQJCgAAACwCAAIABgAHAIEAAAD////Ay9wAAAACDYRv
        EaeaKpaYEdBpKCgAIfkECQoAAAAsAQABAAYAHACBAAAA////wMvcAAAAAhaEbxGnmi2AUCLWazDavPsP
        huJIlmIBACH5BAkKAAAALAEAAAAHAB0AgQAAAP///8DL3AAAAAIXhG8RqCGnxDtyUoSz3rz7D4biSGoV
        chYAIfkECQoAAAAsAAAAAAkAHgCBAAAA////wMvcAAAAAhsEYmkRoibig7Pai7PevPsPhqLGlIpQOknE
        YgUAIfkECQoAAAAsAAAAAAkAHgCBAAAA////wMvcAAAAAiFMgAkhotmenLTai7PevPtvGYciGlDJII0Y
        Ac3buvDzIgUAIfkECQoAAAAsAQAAAAkAHACBAAAAwMvc////AAAAAiMMjqnL7Q+jnLQ+gRXeKGwOBN53
        iKbXnYkoiFqmeEbsUvNRAAAh+QQJCgAAACwBAAoACQAQAIEAAAD////Ay9wAAAACIISPFpvrJ9wSQEQ5
        LQ6261B5liGOpJd0yYow6ZSqMVIAACH5BAkKAAAALAIACQAHAA8AgQAAAP///8DL3AAAAAIYhH+hqSvd
        xIuySmCFyaeiDyJLF2jddR4FACH5BAkKAAAALAIACAAHAA4AgQAAAP///8DL3AAAAAIWhH+hqSuthGyy
        WmDFqaj7jyxh0ElGAQAh+QQJCgAAACwCAAcABwAOAIEAAAD////Ay9wAAAACF4R/oakrrcSDcoaKJcin
        og8iAbggGlAAACH5BAkKAAAALAIABQAHAA8AgQAAAP///8DL3AAAAAIXhI8JwcdvXhNCBoprxmAfroSJ
        MFLjUQAAIfkECQoAAAAsAwAEAAUADgCBAAAA////wMvcAAAAAhGEHwnJHSISnBSCebLe2RpfAAAh+QQJ
        CgAAACwDAAMABQANAIEAAAD////Ay9wAAAACEoQfYZnAKpIAokYbaT28+z4BBQAh+QQJCgAAACwCAAIA
        BgAHAIEAAAD////Ay9wAAAACDYRvEaeaKpaYEdBpKCgAIfkECQoAAAAsAQABAAYABwCBAAAA////wMvc
        AAAAAg2EbxGnmi2AUCLWa3ABACH5BAkKAAAALAEAAAAEAAYAgQAAAP///8DL3AAAAAIKhB0BGZIiAIwS
        FAAh+QQJCgAAACwAAAAABAAEAIEAAAD////Ay9wAAAACBwRiEQLixgoAIfkECQoAAAAsAAAAAAMAAwCB
        AAAA////wMvcAAAAAgVMECKgBQAh+QQJCgAAACwBAAAAAQABAIAAAADAy9wCAkwBADs=
</value>
  </data>
</root>